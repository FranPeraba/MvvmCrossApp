// This file has been autogenerated from a class added in the UI designer.

using System;
using MvvmCross.Platforms.Ios.Views;
using MvvmCrossApp.Core.Resources;
using MvvmCrossApp.Core.ViewModels;
using UIKit;

namespace MvvmCrossApp.iOS.Views
{
	[MvxFromStoryboard("MainView")]
	public partial class DetailView : MvxViewController<DetailMedicineViewModel>
	{
		public DetailView(IntPtr handle) : base(handle)
		{
		}

		bool _isLoading;
		public bool IsLoading
		{
			get => _isLoading;
			set
			{
				_isLoading = value;
				if (!value)
					ActivityIndicator.StopAnimating();
				else
					ActivityIndicator.StartAnimating();
			}
		}
		
		public override void ViewDidLoad()
		{
			base.ViewDidLoad();
			
			SetupUI();
			
			SetupBindings();
		}

		void SetupUI()
		{
			ActivityIndicator.StartAnimating();

			ProspectButton.SetTitle(Strings.Prospect, UIControlState.Normal);
			ProspectButton.Font = UIFont.SystemFontOfSize(20, UIFontWeight.Bold);

			NavigationItem.BackBarButtonItem = new UIBarButtonItem(string.Empty, UIBarButtonItemStyle.Plain, null, null);
			
			Title = Strings.Medicine;
		}

		void SetupBindings()
		{
			var set = CreateBindingSet();
			set.Bind(MedicineLabel).To(vm => vm.Name);
			set.Bind(ProspectButton).To(vm => vm.OpenDocumentAsyncCommand);
			set.Bind(this).For(v => v.IsLoading).To(vm => vm.IsLoading);
			set.Apply();
		}
	}
}
